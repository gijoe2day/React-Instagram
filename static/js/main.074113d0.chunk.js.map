{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","div","initial","width","animate","UploadForm","types","type","onChange","e","selected","target","files","console","log","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","layout","whileHover","opacity","onClick","img","src","alt","transition","delay","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.074113d0.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  );\n};\n\nexport default Title;\n","import * as firebase from \"firebase/app\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDRsWtbIl3va7pHqXvBlnQ7izcAgV_WZRU\",\n  authDomain: \"firegram-project-b2a80.firebaseapp.com\",\n  databaseURL: \"https://firegram-project-b2a80.firebaseio.com\",\n  projectId: \"firegram-project-b2a80\",\n  storageBucket: \"firegram-project-b2a80.appspot.com\",\n  messagingSenderId: \"466196807027\",\n  appId: \"1:466196807027:web:892f9503ea0c89ebeb5906\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };\n","import { useState, useEffect } from \"react\";\nimport {\n  projectStorage,\n  projectFirestore,\n  timestamp,\n} from \"../firebase/config\";\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    //references\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection(\"images\");\n\n    storageRef.put(file).on(\n      \"state_changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n        const url = await storageRef.getDownloadURL();\n        const createdAt = timestamp();\n        collectionRef.add({ url, createdAt });\n        setUrl(url);\n      }\n    );\n  }, [file]);\n\n  return { progress, url, error };\n};\n\nexport default useStorage;\n","import React, { useEffect } from \"react\";\nimport useStorage from \"../hooks/useStorage\";\nimport { motion } from \"framer-motion\";\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div\n      className=\"progress-bar\"\n      initial={{ width: 0 }}\n      animate={{ width: progress + \"%\" }}\n    ></motion.div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from \"react\";\nimport ProgressBar from \"./ProgressBar\";\nimport \"../index\";\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = [\"image/png\", \"image/jpeg\"];\n\n  const changeHandler = (e) => {\n    let selected = e.target.files[0];\n    console.log(selected);\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError(\"\");\n    } else {\n      setFile(null);\n      setError(\"Please select image file (png or jpeg)\");\n    }\n  };\n\n  return (\n    <form>\n      <input type=\"file\" onChange={changeHandler} />\n      <div className=\"output\">\n        {error && <div className=\"error\"> {error}</div>}\n        {file && <div> {file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile} />}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;\n","import { useState, useEffect } from \"react\";\nimport { projectFirestore } from \"../firebase/config\";\n\nconst useFirestore = (collection) => {\n  const [docs, setDocs] = useState([]);\n\n  useEffect(() => {\n    const unsub = projectFirestore\n      .collection(collection)\n      .orderBy(\"createdAt\", \"desc\")\n      .onSnapshot((snap) => {\n        let documents = [];\n        snap.forEach((doc) => {\n          documents.push({ ...doc.data(), id: doc.id });\n        });\n        setDocs(documents);\n      });\n    return () => {\n      unsub();\n    };\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFirestore;\n","import React from \"react\";\nimport useFirestore from \"../hooks/useFirestore\";\nimport { motion } from \"framer-motion\";\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFirestore(\"images\");\n\n  return (\n    <div className=\"image-grid\">\n      {docs &&\n        docs.map((doc) => (\n          <motion.div\n            key={doc.id}\n            layout\n            whileHover={{ opacity: 1 }}\n            className=\"img-wrap\"\n            onClick={() => setSelectedImg(doc.url)}\n          >\n            <motion.img\n              src={doc.url}\n              alt=\"uploaded pic\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 1 }}\n            />\n          </motion.div>\n        ))}\n    </div>\n  );\n};\n\nexport default ImageGrid;\n","import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n  const handleClick = (e) => {\n    if (e.target.classList.contains(\"backdrop\")) {\n      setSelectedImg(null);\n    }\n  };\n  return (\n    <motion.div\n      className=\"backdrop\"\n      onClick={handleClick}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n    >\n      <motion.img\n        src={selectedImg}\n        alt=\"enlarged pic\"\n        initial={{ y: \"-100vh\" }}\n        animate={{ y: 0 }}\n      />\n    </motion.div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Title from \"./comps/Title\";\nimport UploadForm from \"./comps/UploadForm\";\nimport ImageGrid from \"./comps/ImageGrid\";\nimport Modal from \"./comps/Modal\";\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  return (\n    <div className=\"App\">\n      <Title />\n      <UploadForm />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      {selectedImg && (\n        <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./main.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}